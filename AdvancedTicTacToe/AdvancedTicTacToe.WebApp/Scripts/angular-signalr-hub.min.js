angular.module("SignalR",[]).constant("$",window.jQuery).factory("Hub",["$",function(n){function i(t){var i=null;return i=t&&t.rootPath?n.hubConnection(t.rootPath,{useDefaultPath:!1}):n.hubConnection(),i.logging=t&&t.logging?!0:!1,i}function r(n){var r=!(n&&n.useSharedConnection===!1);return r?typeof t[n.rootPath]=="undefined"?t[n.rootPath]=i(n):t[n.rootPath]:i(n)}var t=[];return function(t,i){var u=this;return u.connection=r(i),u.proxy=u.connection.createHubProxy(t),u.on=function(n,t){u.proxy.on(n,t)},u.invoke=function(){return u.proxy.invoke.apply(u.proxy,arguments)},u.disconnect=function(){u.connection.stop()},u.connect=function(){return u.connection.start(i.transport?{transport:i.transport}:null)},i&&i.listeners&&angular.forEach(i.listeners,function(n,t){u.on(t,n)}),i&&i.methods&&angular.forEach(i.methods,function(t){u[t]=function(){var i=n.makeArray(arguments);return i.unshift(t),u.invoke.apply(u,i)}}),i&&i.queryParams&&(u.connection.qs=i.queryParams),i&&i.errorHandler&&u.connection.error(i.errorHandler),i&&i.hubDisconnected&&u.connection.disconnected(i.hubDisconnected),i&&i.stateChanged&&u.connection.stateChanged(i.stateChanged),u.promise=u.connect(),u}}]);
//# sourceMappingURL=angular-signalr-hub.min.js.map
